name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create Windows archive
        run: |
          Compress-Archive -Path build\windows\x64\runner\Release\* -DestinationPath takeout-timefix-windows-x64.zip

      - name: Build Windows MSIX
        run: flutter pub run msix:create --store

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: takeout-timefix-windows-x64.zip

      - name: Upload Windows MSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-msix
          path: build/windows/x64/runner/Release/takeout_timefix.msix
          if-no-files-found: error

  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android App Bundle
        run: flutter build appbundle --release

      - name: Upload Android APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build macOS app
        run: flutter build macos --release

      - name: Create macOS archive
        run: |
          cd build/macos/Build/Products/Release
          tar -czf ../../../../../takeout-timefix-macos.tar.gz takeout_timefix.app

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: takeout-timefix-macos.tar.gz

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Linux app
        run: flutter build linux --release

      - name: Create Linux archive
        run: |
          cd build/linux/x64/release/bundle
          tar -czf ../../../../../takeout-timefix-linux-x64.tar.gz *

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: takeout-timefix-linux-x64.tar.gz


  create-release:
    needs: [build-windows, build-android, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' || (github.ref == 'refs/heads/main' && github.event_name == 'push')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "VERSION=dev-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.VERSION }}
          name: Takeout TimeFix ${{ steps.version.outputs.VERSION }}
          body: |
            ## üöÄ Takeout TimeFix ${{ steps.version.outputs.VERSION }}

            ${{ startsWith(steps.version.outputs.VERSION, 'dev-') && '‚ö†Ô∏è **Development Build** - This is an automated build from the latest main branch commit.' || 'üì¶ **Release Build** - Official release with all platforms supported.' }}

            ### üì± Downloads

            **Desktop Applications:**
            - **Windows (ZIP)**: Download `takeout-timefix-windows-x64.zip`
            - **Windows (MSIX)**: Download `takeout_timefix.msix`
            - **macOS**: Download `takeout-timefix-macos.tar.gz`
            - **Linux**: Download `takeout-timefix-linux-x64.tar.gz`

            **Mobile Applications:**
            - **Android APK**: Download `takeout-timefix-android.apk` (for sideloading)
            - **Android App Bundle**: `takeout-timefix-android.aab` (for Play Store)


            ### üîß Installation Instructions

            **Windows (ZIP):**
            1. Download and extract `takeout-timefix-windows-x64.zip`
            2. Run `takeout_timefix.exe`

            **Windows (MSIX):**
            1. Download `takeout_timefix.msix`
            2. Double-click the MSIX file to install (requires Windows 10 version 1703 or later)
            3. The app will be available in the Start menu

            **macOS:**
            1. Download and extract `takeout-timefix-macos.tar.gz`
            2. Move `takeout_timefix.app` to Applications folder
            3. Right-click and select "Open" (first time only)

            **Linux:**
            1. Download and extract `takeout-timefix-linux-x64.tar.gz`
            2. Run `./takeout_timefix`

            **Android:**
            1. Download `takeout-timefix-android.apk`
            2. Enable "Install from unknown sources" in Settings
            3. Install the APK file

            ### ‚ú® Features
            - Organize Google Photos takeout exports by date
            - Extract timestamps from EXIF data and JSON metadata
            - Support for multiple organization formats
            - Cross-platform compatibility
            - Modern Material Design 3 interface
            - Real-time progress tracking

            ### üêõ Bug Reports
            Please report issues on our [GitHub Issues](https://github.com/your-username/takeout-timefix/issues) page.
          draft: false
          prerelease: ${{ startsWith(steps.version.outputs.VERSION, 'dev-') }}
          files: |
            ./windows-release/takeout-timefix-windows-x64.zip
            ./windows-msix/takeout_timefix.msix
            ./android-apk/app-release.apk
            ./android-aab/app-release.aab
            ./macos-release/takeout-timefix-macos.tar.gz
            ./linux-release/takeout-timefix-linux-x64.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
