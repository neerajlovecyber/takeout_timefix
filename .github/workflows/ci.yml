name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze project source
        run: flutter analyze --fatal-infos


  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            build-target: linux
            build-path: build/linux/x64/release/bundle
          - os: windows-latest
            build-target: windows
            build-path: build/windows/x64/runner/Release
          - os: macos-latest
            build-target: macos
            build-path: build/macos/Build/Products/Release

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.6'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build for ${{ matrix.build-target }}
        run: flutter build ${{ matrix.build-target }} --release

      - name: Test build output exists
        shell: bash
        run: |
          if [ ! -d "${{ matrix.build-path }}" ]; then
            echo "Build output directory not found: ${{ matrix.build-path }}"
            exit 1
          fi
          echo "âœ… Build completed successfully for ${{ matrix.build-target }}"